<launch>
	<include file="$(find jenga_calibrate)/launch/camera_bringup.launch" /> 
	<node name="image_proc" pkg="image_proc" type="image_proc" ns="camera" />

	<!-- bring up ur5 --> 
    <arg name="robot_ip" value="172.22.22.2"/>
    <arg name="limited" default="false"/>
    <arg name="min_payload"  default="0.0"/>
    <arg name="max_payload"  default="5.0"/>
    <arg name="prefix" default="" />

    <!-- robot model -->
    <param unless="$(arg limited)" name="robot_description" command="$(find xacro)/xacro --inorder '$(find jenga_ur5_control)/urdf/ur5_with_jenga_tool.xacro'" />
  
    <!-- ur common -->
    <include file="$(find ur_modern_driver)/launch/ur_common.launch">
    	<arg name="prefix"  value="$(arg prefix)" />
    	<arg name="robot_ip" value="$(arg robot_ip)"/>
    	<arg name="min_payload"  value="$(arg min_payload)"/>
    	<arg name="max_payload"  value="$(arg max_payload)"/>
  	</include>

  	<param name="is_simulation" type="bool" value="false" />

	<!-- launch rviz environment for ur5 -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find jenga_calibrate)/rviz/hand_eye_calibration.rviz"/>

    <!-- launch ar tag tracking node -->
    <arg name="marker_size" default="5.5" />
    <arg name="max_new_marker_error" default="0.08" />
    <arg name="max_track_error" default="0.0" />
    <arg name="cam_image_topic" default="/camera/image_raw" />
    <arg name="cam_info_topic" default="/camera/camera_info" />
    <arg name="output_frame" default="/camera" />
    <arg name="bundle_files" default="$(find jenga_calibrate)/bundles/tower_location_paper.xml" />

    <node name="ar_track_alvar" pkg="ar_track_alvar" type="findMarkerBundlesNoKinect" respawn="false" output="screen" args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame) $(arg bundle_files)" />

    <!-- publish the tower location based on ar tag -->
    <node pkg="jenga_calibrate" name="ar_marker_to_tower_tf_broadcaster" type="ar_marker_to_tower_tf_broadcaster.py" output="screen" respawn="true"/>
</launch>